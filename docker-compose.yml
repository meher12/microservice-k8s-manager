version: '3.8'
services:
  catalog-service:
    build: ./catalog-service
    ports:
      - "3001:3001"
    networks:
      - my-network

  order-service:
    build: ./order-service
    ports:
      - "3002:3002"
    networks:
      - my-network

  frontend:
    build: ./frontend-app
    ports:
      - "8080:80"
    networks:
      - my-network

  # Fonctionnement : Les ports externes 8081, 8082 et 8083 de ton hôte (ordinateur) sont mappés aux ports internes 80 des conteneurs NGINX respectifs.
  # Ainsi, lorsqu'une requête est envoyée à http://localhost:8081, elle est redirigée vers le conteneur NGINX qui écoute sur le port 80 à l'intérieur du conteneur, 
  # lequel à son tour redirige la requête vers catalog-service sur le port 3001 à l'intérieur du réseau Docker.
  nginx-catalog:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx-catalog.conf:/etc/nginx/nginx.conf
    ports:
      - "8081:80"   # Mappe le port 8081 externe de hôte (ordinateur) au port 80 du conteneur(nginx)
    networks:
      - my-network
    depends_on:
      - catalog-service

  nginx-order:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx-order.conf:/etc/nginx/nginx.conf
    ports:
      - "8082:80"  # Port externe pour order-service via NGINX
    networks:
      - my-network
    depends_on:
      - order-service

  nginx-frontend:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx-frontend.conf:/etc/nginx/nginx.conf
    ports:
      - "8083:80"  # Port externe pour frontend via NGINX
    networks:
      - my-network
    depends_on:
      - frontend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - my-network

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - my-network

networks:
  my-network:

volumes:
  mongo-data:
